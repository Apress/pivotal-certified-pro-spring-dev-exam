rootProject.name = 'pivotal-certified-pro-spring-dev-exam'

include '00-ps-core'
include '01-ps-start-practice'
include '01-ps-start-solution'
include '02-ps-container-01-practice'
include '02-ps-container-01-solution'
include '02-ps-container-02-practice'
include '02-ps-container-02-solution'
include '03-ps-test-practice'
include '03-ps-test-solution'
include '03-ps-test-sample'
include '04-ps-aop-practice'
include '04-ps-aop-solution'
include '05-ps-jdbc-practice'
include '05-ps-jdbc-solution'
include '06-ps-tx-practice'
include '06-ps-tx-solution'
include '07-ps-hibernate-practice'
include '07-ps-hibernate-solution'
include '08-ps-jpa-practice'
include '08-ps-jpa-solution'
include '09-ps-data-jpa-practice'
include '09-ps-data-jpa-solution'
include '09-ps-mongo-sample'
include '09-ps-data-jpa'
include '10-ps-mvc-practice'
include '10-ps-mvc-solution'
include '11-ps-security-practice'
include '11-ps-security-solution'
include '11-ps-boot-sample'
include '12-ps-remoting-practice'
include '12-ps-remoting-solution'
include '12-ps-remoting-sample'
include '13-ps-jms-practice'
include '13-ps-jms-solution'
include '14-ps-ws-sample'
include '15-ps-ws-rest-practice'
include '15-ps-ws-rest-solution'
include '15-ps-rest-boot-sample'
include '16-ps-jmx-sample'

//we check if the modules have gradle configuration files
println(' This project is an asset management POC application')
rootProject.children.each { project ->
    project.buildFileName = "${project.name}.gradle"
    assert project.projectDir.isDirectory()
    assert project.buildFile.exists()
    assert project.buildFile.isFile()
}
